os: linux
branches:
  except:
    - release-4.2
    - release-4.3

language: go
go_import_path: github.com/operator-framework/operator-sdk

# go modules require xenial for mercurial TLS 1.2 support
dist: xenial

# Python 3.6 is the default Python when language: python.
# But when not language: python, Python 3 can not be used by default.
# There is pip (/usr/bin/pip), but not pip3.
# Because of it the global env is required.
env:
  global:
    - PATH=/opt/python/3.6.7/bin:$PATH

# Install python3 and utilities dependencies
addons:
  apt:
    packages:
      - "python3"
      - "python3-pip"

cache:
  directories:
    - $HOME/.cache/go-build

go:
- 1.15.x

# The `x_base_steps` top-level key is unknown to travis,
# so we can use it to create a bunch of common build step
# YAML anchors which we use in our build jobs.
x_base_steps:
  # Base go, ansbile, and helm job
  - &test
    env:
    - CLUSTER=k8s
    # before_install for jobs that require go builds and do not run for doc-only changes
    before_install:
      # hack/ci/check-doc-only-update.sh needs to be sourced so
      # that it can properly exit the test early with success
      - source hack/ci/check-doc-only-update.sh
      - travis_retry make tidy
      - git fetch origin --unshallow --tags
    install:
      - make install
      - make setup-k8s
      - export KUBECONFIG="$(kind get kubeconfig-path --name="kind")"
    after_success:
      - echo "Tests passed"
    after_failure:
      - echo "Tests failed"
      - kubectl get all --all-namespaces
      - kubectl get events --all-namespaces --field-selector=type=Warning
    services:
      - docker

  # Base deploy job
  - &deploy
    services:
      - docker
    before_install:
      - git fetch origin --unshallow --tags
      # TODO: remove the chmod command when docker-ce on travis is upgraded to 18.09.0+.
      # We need /etc/docker to be accessible to non-root users.
      # See https://github.com/moby/moby/pull/37847.
      - sudo chmod 0755 /etc/docker
    after_success:
      - echo "Image build succeeded, and docker image tagged and pushed to repository"
    after_failure:
      - echo "Image build, docker image tagging, or docker image pushing to repository failed"

stages:
  - check
  - test
  - name: deploy
    if: type != pull_request AND ( tag IS present OR branch = master OR branch =~ /^v[0-9]+\.[0-9]+\.x$/ OR commit_message =~ /\[travis deploy\]/ )
  - name: release
    if: type != pull_request AND tag IS present

jobs:
  include:

    ## Project check stage jobs ##

    # Run the sanity tests
    - stage: check
      name: Sanity Tests
      before_install:
        - git fetch origin --unshallow --tags
      script:
        - make test-sanity

    # Run website checks
    - name: Doc Checks
      script:
        - make test-links

    ## Operator test stage jobs ##

    # Build and test ansible and test ansible using molecule
    - stage: test
      <<: *test
      name: Ansible on Kubernetes
      before_script:
        - pip3 install --upgrade setuptools pip
        - pip install --user ansible~=2.9.13
      script:
        - make test-e2e-ansible
        - make test-e2e-ansible-molecule

    # Test subcommands
    - <<: *test
      name: Subcommands and Integration on Kubernetes
      script:
      - make test-subcommand
      - make test-integration

    # Build and test go
    - <<: *test
      name: Go on Kubernetes
      before_script:
      - (cd / && go get github.com/mattn/goveralls)
      script:
      - make test-unit
      - make test-e2e-go
      after_success:
      - $GOPATH/bin/goveralls -service=travis-ci -coverprofile=coverage.out -repotoken=$COVERALLS_TOKEN

    # Build and test helm
    - <<: *test
      name: Helm on Kubernetes
      script: make test-e2e-helm

    ## Image deploy/push stage jobs ##

    - stage: deploy
      <<: *deploy
      name: operator-sdk image
      env:
        - TAGS=quay.io/operator-framework/operator-sdk:$TRAVIS_BRANCH
      before_script:
        - |-
          if [[ -n "$TRAVIS_TAG" ]]; then
            TAGS="$TAGS,quay.io/operator-framework/operator-sdk:$TRAVIS_TAG"
            TAGS="$TAGS,quay.io/operator-framework/operator-sdk:latest"
          fi
      script:
        - ./hack/image/build-image.sh \
          --push \
          --platforms linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
          --dockerfile ./images/operator-sdk/Dockerfile \
          --tags quay.io/operator-framework/operator-sdk:$TRAVIS_BRANCH

    - <<: *deploy
      name: helm-operator image
      env:
        - TAGS=quay.io/operator-framework/helm-operator:$TRAVIS_BRANCH
      before_script:
        - |-
          if [[ -n "$TRAVIS_TAG" ]]; then
            TAGS="$TAGS,quay.io/operator-framework/helm-operator:$TRAVIS_TAG"
            TAGS="$TAGS,quay.io/operator-framework/helm-operator:latest"
          fi
      script:
        - ./hack/image/build-image.sh \
          --push \
          --platforms linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
          --dockerfile ./images/helm-operator/Dockerfile \
          --tags quay.io/operator-framework/helm-operator:$TRAVIS_BRANCH

    - <<: *deploy
      name: ansible-operator image
      env:
        - TAGS=quay.io/operator-framework/ansible-operator:$TRAVIS_BRANCH
      before_script:
        - |-
          if [[ -n "$TRAVIS_TAG" ]]; then
            TAGS="$TAGS,quay.io/operator-framework/ansible-operator:$TRAVIS_TAG"
            TAGS="$TAGS,quay.io/operator-framework/ansible-operator:latest"
          fi
      script:
        - ./hack/image/build-image.sh \
          --push \
          --platforms linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
          --dockerfile ./images/ansible-operator/Dockerfile \
          --tags quay.io/operator-framework/ansible-operator:$TRAVIS_BRANCH

    - <<: *deploy
      name: scorecard-test image
      env:
        - TAGS=quay.io/operator-framework/scorecard-test:$TRAVIS_BRANCH
      before_script:
        - |-
          if [[ -n "$TRAVIS_TAG" ]]; then
            TAGS="$TAGS,quay.io/operator-framework/scorecard-test:$TRAVIS_TAG"
            TAGS="$TAGS,quay.io/operator-framework/scorecard-test:latest"
          fi
      script:
        - ./hack/image/build-image.sh \
          --push \
          --platforms linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
          --dockerfile ./images/scorecard-test/Dockerfile \
          --tags quay.io/operator-framework/scorecard-test:$TRAVIS_BRANCH

    - <<: *deploy
      name: scorecard-test-kuttl image
      env:
        - TAGS=quay.io/operator-framework/scorecard-test-kuttl:$TRAVIS_BRANCH
      before_script:
        - |-
          if [[ -n "$TRAVIS_TAG" ]]; then
            TAGS="$TAGS,quay.io/operator-framework/scorecard-test-kuttl:$TRAVIS_TAG"
            TAGS="$TAGS,quay.io/operator-framework/scorecard-test-kuttl:latest"
          fi
      script:
        - ./hack/image/build-image.sh \
          --push \
          --platforms linux/amd64,linux/arm64,linux/ppc64le \
          --dockerfile ./images/scorecard-test-kuttl/Dockerfile \
          --tags $TAGS

    # TODO(estroz): write check for a pre-release commit so an accidental tag push doesn't trigger a release.
    - stage: release
      name: release
      script:
        - make release TAG=$TRAVIS_TAG
